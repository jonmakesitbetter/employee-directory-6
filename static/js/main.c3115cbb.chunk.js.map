{"version":3,"sources":["utils/API.jsx","components/Table.jsx","components/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","props","className","scope","onClick","handleSort","employees","map","employee","id","src","picture","medium","alt","name","first","last","email","Search","state","searchTerm","filteredEmployees","handleInputChange","event","setState","target","value","searchedEmployee","filter","slice","length","toLowerCase","employeeArray","sort","a","b","filterData","API","then","res","console","log","data","results","catch","err","class","for","type","this","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEe,EACG,WACV,OAAOA,IAAMC,IAAI,iDC4BVC,MA9Bf,SAAeC,GACb,OACE,wBAAOC,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,sBACA,8BACE,iCAAQ,oBAAID,UAAU,YAAYC,MAAM,MAAMC,QAASH,EAAMI,WAArD,SACN,iDAGJ,oBAAIF,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGF,EAAMK,UAAUC,KAAI,SAACC,EAAUC,GAAX,OACnB,+BACE,oBAAIN,MAAM,MAAV,SACE,qBAAKO,IAAKF,EAASG,QAAQC,OAAQC,IAAI,YAAgBJ,KAEzD,6BAAKD,EAASM,KAAKC,QACnB,6BAAKP,EAASM,KAAKE,OACnB,6BAAKR,EAASS,oBC0DXC,E,4MA9EbC,MAAQ,CAAEb,UAAW,GAAIc,WAAY,GAAIC,kBAAmB,I,EAa5DC,kBAAoB,SAACC,GACnB,EAAKC,SACH,CACEJ,WAAYG,EAAME,OAAOC,QAE3B,WACE,GAA8B,KAA1B,EAAKP,MAAMC,WACb,EAAKI,SAAS,CAAEH,kBAAmB,EAAKF,MAAMb,gBACzC,CACL,IAAMqB,EAAmB,EAAKR,MAAMb,UAAUsB,QAAO,SAACpB,GACpD,OACEA,EAASM,KAAKC,MACXc,MAAM,EAAG,EAAKV,MAAMC,WAAWU,QAC/BC,gBAAkB,EAAKZ,MAAMC,WAAWW,iBAG/C,EAAKP,SAAS,CAAEH,kBAAmBM,S,EAM3CtB,WAAa,WACX,IAAI2B,EAAgB,EAAKb,MAAMb,UAC/B0B,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEpB,KAAKC,MAAQoB,EAAErB,KAAKC,OAAe,EACrCmB,EAAEpB,KAAKC,MAAQoB,EAAErB,KAAKC,MAAc,EACjC,KAGT,EAAKS,SAAS,CACZY,WAAYJ,K,kEA1CK,IAAD,OAClBK,IACGC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKf,SAAS,CACZlB,UAAWiC,EAAIG,KAAKC,QACpBtB,kBAAmBkB,EAAIG,KAAKC,aAG/BC,OAAM,SAACC,GAAD,OAASL,QAAQC,IAAII,Q,+BAuC9B,OACE,gCACE,qBAAKC,MAAM,4BAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,YAAV,gCACA,mBAAGA,MAAM,SAIT,uBAAOC,IAAI,wBAAX,oBACA,uBACEC,KAAK,QACLF,MAAM,eACNhC,KAAK,kBACLY,MAAOuB,KAAK9B,MAAMC,WAClB8B,SAAUD,KAAK3B,yBAIrB,cAAC,EAAD,CACEhB,UAAW2C,KAAK9B,MAAME,kBACtBhB,WAAY4C,KAAK5C,oB,GAxEN8C,aCONC,MARf,WACE,OACE,qBAAKlD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c3115cbb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees: ()=>{\r\n        return axios.get(\"https://randomuser.me/api/?results=15&nat=us\")\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction Table(props) {\r\n  return (\r\n    <table className=\"table table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Portrait</th>\r\n          <div>\r\n            <button><th className=\"link dark\" scope=\"col\" onClick={props.handleSort}>\r\n              <strong>First</strong>\r\n            </th></button>\r\n          </div>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.employees.map((employee, id) => (\r\n          <tr>\r\n            <th scope=\"row\">\r\n              <img src={employee.picture.medium} alt=\"employee\" key={id} />\r\n            </th>\r\n            <td>{employee.name.first}</td>\r\n            <td>{employee.name.last}</td>\r\n            <td>{employee.email}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Table from \"./Table\";\r\n\r\nclass Search extends Component {\r\n  state = { employees: [], searchTerm: \"\", filteredEmployees: [] };\r\n\r\n  componentDidMount() {\r\n    API.getEmployees()\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          employees: res.data.results,\r\n          filteredEmployees: res.data.results,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  handleInputChange = (event) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n      },\r\n      () => {\r\n        if (this.state.searchTerm === \"\") {\r\n          this.setState({ filteredEmployees: this.state.employees });\r\n        } else {\r\n          const searchedEmployee = this.state.employees.filter((employee) => {\r\n            return (\r\n              employee.name.first\r\n                .slice(0, this.state.searchTerm.length)\r\n                .toLowerCase() === this.state.searchTerm.toLowerCase()\r\n            );\r\n          });\r\n          this.setState({ filteredEmployees: searchedEmployee });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSort = () => {\r\n    var employeeArray = this.state.employees;\r\n    employeeArray.sort((a, b) => {\r\n      if (a.name.first < b.name.first) return -1;\r\n      if (a.name.first > b.name.first) return 1;\r\n      return 0;\r\n    });\r\n\r\n    this.setState({\r\n      filterData: employeeArray,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"jumbotron jumbotron-fluid\">\r\n          <div class=\"container\">\r\n            <h1 class=\"display-4\">Employee Directory</h1>\r\n            <p class=\"lead\">\r\n              \r\n            </p>\r\n\r\n            <label for=\"exampleInputPassword1\">Search</label>\r\n            <input \r\n              type=\"input\"\r\n              class=\"form-control\"\r\n              name=\"employee-search\"\r\n              value={this.state.searchTerm}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Table\r\n          employees={this.state.filteredEmployees}\r\n          handleSort={this.handleSort}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport Search from \"./components/Search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}